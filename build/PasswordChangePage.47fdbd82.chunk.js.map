{"version":3,"sources":["containers/PasswordChangePage/PasswordChangePage.js","containers/PasswordChangePage/PasswordChangePage.module.css"],"names":["PasswordChangePageComponent","props","changePasswordError","changePasswordInProgress","currentUser","onChange","onSubmitChangePassword","onResetPassword","resetPasswordInProgress","resetPasswordError","passwordChanged","scrollingDisabled","intl","changePasswordForm","id","className","css","form","onSubmit","inProgress","ready","title","formatMessage","currentPage","desktopClassName","desktopTopbar","mobileClassName","mobileTopbar","selectedPageName","currentTab","content","defaultProps","PropTypes","bool","func","PasswordChangePage","compose","connect","state","user","isScrollingDisabled","dispatch","changePasswordClear","values","changePassword","resetPassword","injectIntl","module","exports"],"mappings":"mEAAA,8LAuBaA,EAA8B,SAAAC,GACzC,IACEC,EAWED,EAXFC,oBACAC,EAUEF,EAVFE,yBACAC,EASEH,EATFG,YACAC,EAQEJ,EARFI,SACAC,EAOEL,EAPFK,uBACAC,EAMEN,EANFM,gBACAC,EAKEP,EALFO,wBACAC,EAIER,EAJFQ,mBACAC,EAGET,EAHFS,gBACAC,EAEEV,EAFFU,kBACAC,EACEX,EADFW,KAGIC,EACJT,GAAeA,EAAYU,GACzB,cAAC,IAAD,CACEC,UAAWC,IAAIC,KACff,oBAAqBA,EACrBE,YAAaA,EACbc,SAAUZ,EACVD,SAAUA,EACVE,gBAAiBA,EACjBC,wBAAyBA,EACzBC,mBAAoBA,EACpBU,WAAYhB,EACZiB,MAAOV,IAEP,KAEAW,EAAQT,EAAKU,cAAc,CAAER,GAAI,6BAEvC,OACE,cAAC,KAAD,CAAMO,MAAOA,EAAOV,kBAAmBA,EAAvC,SACE,eAAC,KAAD,WACE,eAAC,KAAD,WACE,cAAC,IAAD,CACEY,YAAY,qBACZC,iBAAkBR,IAAIS,cACtBC,gBAAiBV,IAAIW,eAEvB,cAAC,KAAD,CAASC,iBAAiB,0BAE5B,cAAC,KAAD,CAAqCC,WAAW,uBAChD,cAAC,KAAD,UACE,sBAAKd,UAAWC,IAAIc,QAApB,UACE,oBAAIf,UAAWC,IAAIK,MAAnB,SACE,cAAC,IAAD,CAAkBP,GAAG,iCAEtBD,OAGL,cAAC,KAAD,UACE,cAAC,IAAD,YAOVb,EAA4B+B,aAAe,CACzC7B,oBAAqB,KACrBE,YAAa,KACbI,yBAAyB,EACzBC,mBAAoB,MAGCuB,IAAfC,KAAeD,IAATE,KAAd,IA4CMC,EAAqBC,kBACzBC,mBA5BsB,SAAAC,GAEtB,MAMIA,EAAMH,mBALRjC,EADF,EACEA,oBACAC,EAFF,EAEEA,yBACAO,EAHF,EAGEA,gBACAF,EAJF,EAIEA,wBACAC,EALF,EAKEA,mBAGF,MAAO,CACLP,sBACAC,2BACAC,YAJsBkC,EAAMC,KAAtBnC,YAKNM,kBACAC,kBAAmB6B,YAAoBF,GACvC9B,0BACAC,yBAIuB,SAAAgC,GAAQ,MAAK,CACtCpC,SAAU,kBAAMoC,EAASC,gBACzBpC,uBAAwB,SAAAqC,GAAM,OAAIF,EAASG,YAAeD,KAC1DpC,gBAAiB,SAAAoC,GAAM,OAAIF,EAASI,YAAcF,SAQlDG,IALyBV,CAMzBpC,GAEamC,a,oBC9IfY,EAAOC,QAAU,CAAC,QAAU,oCAAoC,cAAgB,0CAA0C,aAAe,yCAAyC,MAAQ","file":"PasswordChangePage.47fdbd82.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from 'redux';\nimport { connect } from 'react-redux';\nimport { FormattedMessage, injectIntl, intlShape } from '../../util/reactIntl';\nimport { propTypes } from '../../util/types';\nimport { isScrollingDisabled } from '../../ducks/UI.duck';\nimport {\n  LayoutSideNavigation,\n  LayoutWrapperMain,\n  LayoutWrapperAccountSettingsSideNav,\n  LayoutWrapperTopbar,\n  LayoutWrapperFooter,\n  Footer,\n  Page,\n  UserNav,\n} from '../../components';\nimport { PasswordChangeForm } from '../../forms';\nimport { TopbarContainer } from '../../containers';\n\nimport { changePassword, changePasswordClear, resetPassword } from './PasswordChangePage.duck';\nimport css from './PasswordChangePage.module.css';\n\nexport const PasswordChangePageComponent = props => {\n  const {\n    changePasswordError,\n    changePasswordInProgress,\n    currentUser,\n    onChange,\n    onSubmitChangePassword,\n    onResetPassword,\n    resetPasswordInProgress,\n    resetPasswordError,\n    passwordChanged,\n    scrollingDisabled,\n    intl,\n  } = props;\n\n  const changePasswordForm =\n    currentUser && currentUser.id ? (\n      <PasswordChangeForm\n        className={css.form}\n        changePasswordError={changePasswordError}\n        currentUser={currentUser}\n        onSubmit={onSubmitChangePassword}\n        onChange={onChange}\n        onResetPassword={onResetPassword}\n        resetPasswordInProgress={resetPasswordInProgress}\n        resetPasswordError={resetPasswordError}\n        inProgress={changePasswordInProgress}\n        ready={passwordChanged}\n      />\n    ) : null;\n\n  const title = intl.formatMessage({ id: 'PasswordChangePage.title' });\n\n  return (\n    <Page title={title} scrollingDisabled={scrollingDisabled}>\n      <LayoutSideNavigation>\n        <LayoutWrapperTopbar>\n          <TopbarContainer\n            currentPage=\"PasswordChangePage\"\n            desktopClassName={css.desktopTopbar}\n            mobileClassName={css.mobileTopbar}\n          />\n          <UserNav selectedPageName=\"PasswordChangePage\" />\n        </LayoutWrapperTopbar>\n        <LayoutWrapperAccountSettingsSideNav currentTab=\"PasswordChangePage\" />\n        <LayoutWrapperMain>\n          <div className={css.content}>\n            <h1 className={css.title}>\n              <FormattedMessage id=\"PasswordChangePage.heading\" />\n            </h1>\n            {changePasswordForm}\n          </div>\n        </LayoutWrapperMain>\n        <LayoutWrapperFooter>\n          <Footer />\n        </LayoutWrapperFooter>\n      </LayoutSideNavigation>\n    </Page>\n  );\n};\n\nPasswordChangePageComponent.defaultProps = {\n  changePasswordError: null,\n  currentUser: null,\n  resetPasswordInProgress: false,\n  resetPasswordError: null,\n};\n\nconst { bool, func } = PropTypes;\n\nPasswordChangePageComponent.propTypes = {\n  changePasswordError: propTypes.error,\n  changePasswordInProgress: bool.isRequired,\n  currentUser: propTypes.currentUser,\n  onChange: func.isRequired,\n  onSubmitChangePassword: func.isRequired,\n  passwordChanged: bool.isRequired,\n  scrollingDisabled: bool.isRequired,\n  resetPasswordInProgress: bool,\n  resetPasswordError: propTypes.error,\n\n  // from injectIntl\n  intl: intlShape.isRequired,\n};\n\nconst mapStateToProps = state => {\n  // Topbar needs user info.\n  const {\n    changePasswordError,\n    changePasswordInProgress,\n    passwordChanged,\n    resetPasswordInProgress,\n    resetPasswordError,\n  } = state.PasswordChangePage;\n  const { currentUser } = state.user;\n  return {\n    changePasswordError,\n    changePasswordInProgress,\n    currentUser,\n    passwordChanged,\n    scrollingDisabled: isScrollingDisabled(state),\n    resetPasswordInProgress,\n    resetPasswordError,\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  onChange: () => dispatch(changePasswordClear()),\n  onSubmitChangePassword: values => dispatch(changePassword(values)),\n  onResetPassword: values => dispatch(resetPassword(values)),\n});\n\nconst PasswordChangePage = compose(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  ),\n  injectIntl\n)(PasswordChangePageComponent);\n\nexport default PasswordChangePage;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"PasswordChangePage_content__2oiZ9\",\"desktopTopbar\":\"PasswordChangePage_desktopTopbar__o3NOK\",\"mobileTopbar\":\"PasswordChangePage_mobileTopbar__3nKKV\",\"title\":\"PasswordChangePage_title__3cVdR\"};"],"sourceRoot":""}