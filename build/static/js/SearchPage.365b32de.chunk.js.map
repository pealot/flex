{"version":3,"sources":["containers/SearchPage/SearchPage.module.css","../node_modules/lodash/intersection.js","../node_modules/lodash/_baseIntersection.js","../node_modules/lodash/_castArrayLikeObject.js","containers/SearchPage/SearchPage.helpers.js","containers/SearchPage/FilterComponent.js","containers/SearchPage/MainPanel.js","containers/SearchPage/SearchPage.js"],"names":["module","exports","arrayMap","require","baseIntersection","baseRest","castArrayLikeObject","intersection","arrays","mapped","length","SetCache","arrayIncludes","arrayIncludesWith","baseUnary","cacheHas","nativeMin","Math","min","iteratee","comparator","includes","othLength","othIndex","caches","Array","maxLength","Infinity","result","array","undefined","index","seen","outer","value","computed","cache","push","isArrayLikeObject","flatten","acc","val","concat","validURLParamForExtendedData","queryParamName","paramValueRaw","filters","filterConfig","find","f","isArray","queryParamNames","paramValue","toString","config","max","type","allowedValues","options","map","o","key","searchMode","valueArray","parseSelectFilterOptions","validValues","join","split","v","validFilterParams","params","filterParamNames","reduce","Object","entries","validParams","entry","paramName","pickSearchParamsOnly","sortConfig","origin","address","bounds","rest","boundsMaybe","originMaybe","sortSearchByDistance","filterParams","sort","sortMaybe","FilterComponent","props","idPrefix","initialValues","urlQueryParams","getHandleChangedValueFn","id","label","liveEdit","showAsPopup","useHistoryPush","componentId","toLowerCase","name","replace","onSelect","onSubmit","cleanSearchFromConflictingParams","searchParams","isAnyFilterActive","conflictingFilters","MainPanel","state","isSecondaryFiltersOpen","currentQueryParams","applyFilters","bind","cancelFilters","resetAll","handleSortBy","this","history","search","createResourceLocatorString","routeConfiguration","setState","e","filterQueryParamNames","queryParams","omit","currentQueryParam","getInitialValue","updatedURLParams","prevState","mergedQueryParams","urlParam","values","className","rootClassName","listings","searchInProgress","searchListingsError","searchParamsAreInSync","onActivateListing","onManageDisableScrolling","onOpenModal","onCloseModal","onMapIconClick","pagination","searchParamsForPagination","showAsModalMaxWidth","primaryFilters","filter","group","secondaryFilters","hasSecondaryFilters","selectedFilters","selectedFiltersCount","keys","selectedSecondaryFilters","selectedSecondaryFiltersCount","propsForSecondaryFiltersToggle","toggleSecondaryFiltersOpen","isOpen","hasPaginationInfo","totalItems","listingsAreLoaded","sortBy","mode","conflictingFilterActive","mobileClassesMaybe","css","menuLabelRootClassName","sortByMenuLabel","active","isConflictingFilterActive","contentPlacementOffset","classes","classNames","searchResultContainer","searchFiltersPrimary","sortByComponent","resultsCount","searchFiltersMobile","searchFiltersPanel","onClosePanel","newSearchInProgress","error","searchListingsPanel","setActiveListing","Component","defaultProps","custom","SearchPageComponent","isSearchMapOpenOnMobile","tab","isMobileModalOpen","searchMapListingsInProgress","onMapMoveEnd","debounce","onOpenMobileModal","onCloseMobileModal","viewportBoundsChanged","data","viewportBounds","viewportCenter","routes","searchPagePath","pathByRouteName","currentPath","window","location","pathname","parse","latlng","latlngBounds","mapSearch","intl","mapListings","scrollingDisabled","activeListingId","searchInURL","page","stringify","validQueryParams","validURLParamsForExtendedData","isMobileLayout","innerWidth","shouldShowSearchMap","siteTitle","searchAddress","formatMessage","schemaDescription","schemaTitle","schemaListings","l","i","title","attributes","pathToItem","uuid","slug","createSlug","position","url","canonicalRootURL","description","schema","mainEntity","JSON","itemListOrder","itemListElement","createSearchResultSchema","topbarClasses","topbarBehindModal","topbar","currentPage","currentSearchParams","container","useLocationSearchBounds","mapPanel","isModalOpenOnMobile","onClose","mapWrapper","reusableContainerClassName","center","onCloseAsModal","messages","SearchPage","compose","withRouter","connect","currentPageResultIds","searchMapListingIds","getListingsById","unionWith","id1","id2","isScrollingDisabled","dispatch","disableScrolling","manageDisableScrolling","onSearchMapListings","searchMapListings","listingId","injectIntl"],"mappings":"uGACAA,EAAOC,QAAU,CAAC,kBAAoB,sCAAsC,OAAS,2BAA2B,UAAY,8BAA8B,sBAAwB,0CAA0C,MAAQ,0BAA0B,aAAe,iCAAiC,qBAAuB,yCAAyC,oBAAsB,wCAAwC,mBAAqB,uCAAuC,SAAW,6BAA6B,oBAAsB,wCAAwC,oBAAsB,wCAAwC,SAAW,6BAA6B,OAAS,2BAA2B,gBAAkB,oCAAoC,WAAa,+BAA+B,IAAM,0B,qBCDh0B,IAAIC,EAAWC,EAAQ,KACnBC,EAAmBD,EAAQ,MAC3BE,EAAWF,EAAQ,KACnBG,EAAsBH,EAAQ,MAmB9BI,EAAeF,GAAS,SAASG,GACnC,IAAIC,EAASP,EAASM,EAAQF,GAC9B,OAAQG,EAAOC,QAAUD,EAAO,KAAOD,EAAO,GAC1CJ,EAAiBK,GACjB,MAGNT,EAAOC,QAAUM,G,qBC7BjB,IAAII,EAAWR,EAAQ,KACnBS,EAAgBT,EAAQ,KACxBU,EAAoBV,EAAQ,KAC5BD,EAAWC,EAAQ,KACnBW,EAAYX,EAAQ,KACpBY,EAAWZ,EAAQ,KAGnBa,EAAYC,KAAKC,IAiErBlB,EAAOC,QArDP,SAA0BO,EAAQW,EAAUC,GAS1C,IARA,IAAIC,EAAWD,EAAaP,EAAoBD,EAC5CF,EAASF,EAAO,GAAGE,OACnBY,EAAYd,EAAOE,OACnBa,EAAWD,EACXE,EAASC,MAAMH,GACfI,EAAYC,IACZC,EAAS,GAENL,KAAY,CACjB,IAAIM,EAAQrB,EAAOe,GACfA,GAAYJ,IACdU,EAAQ3B,EAAS2B,EAAOf,EAAUK,KAEpCO,EAAYV,EAAUa,EAAMnB,OAAQgB,GACpCF,EAAOD,IAAaH,IAAeD,GAAaT,GAAU,KAAOmB,EAAMnB,QAAU,KAC7E,IAAIC,EAASY,GAAYM,QACzBC,EAEND,EAAQrB,EAAO,GAEf,IAAIuB,GAAS,EACTC,EAAOR,EAAO,GAElBS,EACA,OAASF,EAAQrB,GAAUkB,EAAOlB,OAASgB,GAAW,CACpD,IAAIQ,EAAQL,EAAME,GACdI,EAAWhB,EAAWA,EAASe,GAASA,EAG5C,GADAA,EAASd,GAAwB,IAAVc,EAAeA,EAAQ,IACxCF,EACEjB,EAASiB,EAAMG,GACfd,EAASO,EAAQO,EAAUf,IAC5B,CAEL,IADAG,EAAWD,IACFC,GAAU,CACjB,IAAIa,EAAQZ,EAAOD,GACnB,KAAMa,EACErB,EAASqB,EAAOD,GAChBd,EAASb,EAAOe,GAAWY,EAAUf,IAE3C,SAASa,EAGTD,GACFA,EAAKK,KAAKF,GAEZP,EAAOS,KAAKH,IAGhB,OAAON,I,qBCtET,IAAIU,EAAoBnC,EAAQ,KAahCH,EAAOC,QAJP,SAA6BiC,GAC3B,OAAOI,EAAkBJ,GAASA,EAAQ,K,8YCHtCK,EAAU,SAACC,EAAKC,GAAN,OAAcD,EAAIE,OAAOD,IAW5BE,EAA+B,SAACC,EAAgBC,EAAeC,GAE1E,IAAMC,EAAeD,EAAQE,MAAK,SAAAC,GAEhC,OADgBxB,MAAMyB,QAAQD,EAAEE,iBAE5BF,EAAEE,gBAAgB9B,SAASuB,GAC3BK,EAAEE,kBAAoBP,KAGtBQ,EAAaP,EAAcQ,WAEjC,GAAIN,EAAc,CAChB,MAAqBA,EAAaO,QAAU,GAApCpC,EAAR,EAAQA,IAAKqC,EAAb,EAAaA,IAEb,GAAI,CAAC,qBAAsB,wBAAwBlC,SAAS0B,EAAaS,MAAO,CAE9E,IAAMC,EAAgBV,EAAaO,OAAOI,QAAQC,KAAI,SAAAC,GAAC,OAAIA,EAAEC,OACvDC,EAAaf,EAAaO,OAAOQ,WACjCC,EAAaC,YAAyBZ,GACtCa,EAAc1D,IAAawD,EAAYN,GAAeS,KAAK,KAEjE,OAAOD,EAAYvD,OAAS,EAArB,eACAkC,EAAiBkB,EAAU,UAAMA,EAAN,YAAoBG,GAAgBA,GAClE,GACC,GAA0B,gBAAtBlB,EAAaS,KAAwB,CAE9C,IACMS,GADab,EAAaA,EAAWe,MAAM,KAAO,IACzBR,KAAI,SAAAS,GACjC,OAAOA,EAAIlD,EAAMA,EAAMkD,EAAIb,EAAMA,EAAMa,KAEzC,OAA8B,IAAvBH,EAAYvD,OAAZ,eAA8BkC,EAAiBqB,EAAYC,KAAK,MAAS,GAC3E,GAAInB,EAET,OAAOK,EAAW1C,OAAS,EAApB,eAA2BkC,EAAiBQ,GAAe,GAGtE,MAAO,IAWIiB,EAAoB,SAACC,EAAQxB,GACxC,IAAMyB,EAAmBzB,EAAQa,KAAI,SAAAV,GAAC,OAAIA,EAAEE,mBAAiBqB,OAAOjC,EAAS,IAG7E,OAFqBkC,OAAOC,QAAQJ,GAEhBE,QAAO,SAACG,EAAaC,GACvC,kBAAgCA,EAAhC,GAAOC,EAAP,KAAkBzB,EAAlB,KAEA,OAAOmB,EAAiBlD,SAASwD,GAA1B,2BAEEF,GACAhC,EAA6BkC,EAAWzB,EAAYN,IAHtD,eAKE6B,KACR,KA6BQG,EAAuB,SAACR,EAAQxB,EAASiC,GACpD,MAA6CT,GAAU,GAAtCU,GAAjB,EAAQC,QAAR,EAAiBD,QAAQE,EAAzB,EAAyBA,OAAWC,EAApC,iBACMC,EAAcF,EAAS,CAAEA,UAAW,GACpCG,EAAc/B,IAAOgC,sBAAwBN,EAAS,CAAEA,UAAW,GACnEO,EAAelB,EAAkBc,EAAMrC,GACvC0C,EAAOL,EAAKJ,EAAWnC,gBACvB6C,EAAYD,EAAO,CAAEA,QAAS,GAEpC,OAAO,mDACFJ,GACAC,GACAE,GACAE,I,kHCjBQC,EAzFS,SAAAC,GACtB,IACEC,EAMED,EANFC,SACA7C,EAKE4C,EALF5C,aAEA8C,GAGEF,EAJFG,eAIEH,EAHFE,eACAE,EAEEJ,EAFFI,wBACGZ,EANL,YAOIQ,EAPJ,GAQQK,EAA6CjD,EAA7CiD,GAAIxC,EAAyCT,EAAzCS,KAAML,EAAmCJ,EAAnCI,gBAAiB8C,EAAkBlD,EAAlBkD,MAAO3C,EAAWP,EAAXO,OAClC4C,EAA0Bf,EAA1Be,SAAUC,EAAgBhB,EAAhBgB,YAEZC,EAAiBF,GAAYC,EAE7BE,EAAW,UADFT,GAAY,aACV,YAAgBI,EAAGM,eAC9BC,EAAOP,EAAGQ,QAAQ,OAAQ,KAAKF,cAErC,OAAQ9C,GACN,IAAK,qBACH,OACE,cAAC,KAAD,yBACEwC,GAAIK,EACJJ,MAAOA,EACP9C,gBAAiBA,EACjB0C,cAAeA,EAAc1C,GAC7BsD,SAAUV,EAAwBK,IAC9B9C,GACA6B,IAIV,IAAK,uBACH,OACE,cAAC,KAAD,yBACEa,GAAIK,EACJJ,MAAOA,EACPM,KAAMA,EACNpD,gBAAiBA,EACjB0C,cAAeA,EAAc1C,GAC7BuD,SAAUX,EAAwBK,IAC9B9C,GACA6B,IAIV,IAAK,yBACH,OACE,cAAC,IAAD,yBACEa,GAAIK,EACJJ,MAAOA,EACP9C,gBAAiBA,EACjB0C,cAAeA,EAAc1C,GAC7BuD,SAAUX,EAAwBK,IAC9B9C,GACA6B,IAIV,IAAK,cACH,OACE,cAAC,KAAD,yBACEa,GAAIK,EACJJ,MAAOA,EACP9C,gBAAiBA,EACjB0C,cAAeA,EAAc1C,GAC7BuD,SAAUX,EAAwBK,IAC9B9C,GACA6B,IAIV,IAAK,gBACH,OACE,cAAC,KAAD,yBACEa,GAAIK,EACJJ,MAAOA,EACPM,KAAMA,EACNpD,gBAAiBA,EACjB0C,cAAeA,EAAc1C,GAC7BuD,SAAUX,EAAwBK,IAC9B9C,GACA6B,IAGV,QACE,OAAO,O,mBCvEPwB,EAAmC,SAACC,EAAc7B,EAAYhC,GASlE,OAL6B8D,YAC3B9B,EAAW+B,mBACXF,EACA7D,GAEyB,2BAClB6D,GADkB,kBACH7B,EAAWnC,eAAiB,OAChDgE,GASAG,E,kDACJ,WAAYpB,GAAQ,IAAD,8BACjB,cAAMA,IACDqB,MAAQ,CAAEC,wBAAwB,EAAOC,mBAAoBvB,EAAMG,gBAExE,EAAKqB,aAAe,EAAKA,aAAaC,KAAlB,gBACpB,EAAKC,cAAgB,EAAKA,cAAcD,KAAnB,gBACrB,EAAKE,SAAW,EAAKA,SAASF,KAAd,gBAEhB,EAAKvB,cAAgB,EAAKA,cAAcuB,KAAnB,gBACrB,EAAKrB,wBAA0B,EAAKA,wBAAwBqB,KAA7B,gBAG/B,EAAKG,aAAe,EAAKA,aAAaH,KAAlB,gBAZH,E,gDAgBnB,WACE,MAA8DI,KAAK7B,MAA3D8B,EAAR,EAAQA,QAAS3B,EAAjB,EAAiBA,eAAgBf,EAAjC,EAAiCA,WAAYhC,EAA7C,EAA6CA,aACvC6D,EAAY,2BAAQd,GAAmB0B,KAAKR,MAAME,oBAClDQ,EAASf,EAAiCC,EAAc7B,EAAYhC,GAE1E0E,EAAQpF,KAAKsF,YAA4B,aAAcC,cAAsB,GAAIF,M,2BAInF,WACEF,KAAKK,SAAS,CAAEX,mBAAoB,O,sBAItC,SAASY,GACP,MAAkDN,KAAK7B,MAA/CG,EAAR,EAAQA,eAAgB2B,EAAxB,EAAwBA,QAClBM,EADN,EAAiChF,aACUY,KAAI,SAAAV,GAAC,OAAIA,EAAEE,mBAGtDqE,KAAKK,SAAS,CAAEX,mBAAoB,KAGpC,IAAMc,EAAcC,IAAKnC,EAAgBiC,GACzCN,EAAQpF,KAAKsF,YAA4B,aAAcC,cAAsB,GAAII,M,2BAGnF,SAAc7E,GAEZ,IAAM2C,EAAiB0B,KAAK7B,MAAMG,eAE5BoB,EAAqBM,KAAKR,MAAME,mBAatC,OADgBzF,MAAMyB,QAAQC,GAE1BA,EAAgBqB,QAAO,SAAChC,EAAKqC,GAC3B,OAAO,2BAAKrC,GAAZ,kBAAkBqC,EAZA,SAAAA,GACtB,IAAMqD,EAAoBhB,EAAmBrC,GAE7C,MAD0D,qBAAtBqD,EACNA,EAAoBpC,EAAejB,GAS/BsD,CAAgBtD,OAC7C,IACH,K,qCAGN,SAAwBuB,GAAiB,IAAD,OACtC,EAA8DoB,KAAK7B,MAA3DG,EAAR,EAAQA,eAAgB2B,EAAxB,EAAwBA,QAAS1C,EAAjC,EAAiCA,WAAYhC,EAA7C,EAA6CA,aAE7C,OAAO,SAAAqF,GAqBL,EAAKP,UApBW,SAAAQ,GACd,IAAQpD,EAAoBa,EAApBb,QAASC,EAAWY,EAAXZ,OACXoD,EAAiB,2BAAQxC,GAAmBuC,EAAUnB,oBAK5D,MAAO,CACLA,mBAAmB,uCAAMoB,GAAsBF,GAA7B,IAA+CnD,UAASC,eAI7D,WACf,GAAIkB,EAAgB,CAClB,IAAMQ,EAAe,EAAKI,MAAME,mBAC1BQ,EAASf,EAAiCC,EAAc7B,EAAYhC,GAC1E0E,EAAQpF,KAAKsF,YAA4B,aAAcC,cAAsB,GAAIF,W,0BAQzF,SAAaa,EAAUC,GACrB,MAAoChB,KAAK7B,MAAjC8B,EAAR,EAAQA,QAAS3B,EAAjB,EAAiBA,eACXkC,EAAcQ,EAAM,2BACjB1C,GADiB,kBACAyC,EAAWC,IACjCP,IAAKnC,EAAgByC,GAEzBd,EAAQpF,KAAKsF,YAA4B,aAAcC,cAAsB,GAAII,M,oBAGnF,WAAU,IAAD,OACP,EAkBIR,KAAK7B,MAjBP8C,EADF,EACEA,UACAC,EAFF,EAEEA,cACA5C,EAHF,EAGEA,eACA6C,EAJF,EAIEA,SACAC,EALF,EAKEA,iBACAC,EANF,EAMEA,oBACAC,EAPF,EAOEA,sBACAC,EARF,EAQEA,kBACAC,EATF,EASEA,yBACAC,EAVF,EAUEA,YACAC,EAXF,EAWEA,aACAC,EAZF,EAYEA,eACAC,EAbF,EAaEA,WACAC,EAdF,EAcEA,0BACAC,EAfF,EAeEA,oBACAvG,EAhBF,EAgBEA,aACAgC,EAjBF,EAiBEA,WAGIwE,EAAiBxG,EAAayG,QAAO,SAAAvG,GAAC,MAAgB,YAAZA,EAAEwG,SAC5CC,EAAmB3G,EAAayG,QAAO,SAAAvG,GAAC,MAAgB,YAAZA,EAAEwG,SAC9CE,KAAyBD,GAAoBA,EAAiBhJ,OAAS,GAGvEkJ,EAAkBvF,EAAkByB,EAAgB/C,GACpD8G,EAAuBpF,OAAOqF,KAAKF,GAAiBlJ,OAGpDqJ,EAA2BJ,EAC7BtF,EAAkByB,EAAgB4D,GAClC,GACEM,EAAgCvF,OAAOqF,KAAKC,GAA0BrJ,OAEtEuG,IAA2B0C,GAAuBnC,KAAKR,MAAMC,uBAC7DgD,EAAiCN,EACnC,CACE1C,uBAAwBO,KAAKR,MAAMC,uBACnCiD,2BAA4B,SAAAC,GAC1B,EAAKtC,SAAS,CAAEZ,uBAAwBkD,KAE1CH,iCAEF,GAEEI,IAAsBhB,GAAuC,MAAzBA,EAAWiB,WAC/CA,EAAavB,GAAyBsB,EAAoBhB,EAAWiB,WAAa,EAClFC,GAAqB1B,GAAoBE,GAAyBsB,EAElEG,EAAS,SAAAC,GACb,IAAMC,EAA0B5D,YAC9B9B,EAAW+B,mBACXhB,EACA/C,GAGI2H,EACK,WAATF,EACI,CACE9B,cAAeiC,IAAIJ,OACnBK,uBAAwBD,IAAIE,iBAE9B,GACN,OAAO9F,EAAW+F,OAChB,cAAC,KAAD,2BACMJ,GADN,IAEElF,KAAMM,EAAef,EAAWnC,gBAChCmI,4BAA6BN,EAC7BhE,SAAU,EAAKc,aACfpB,aAAW,EACX6E,wBArMqB,MAuMrB,MAGAC,EAAUC,IAAWxC,GAAiBiC,IAAIQ,sBAAuB1C,GAEvE,OACE,sBAAKA,UAAWwC,EAAhB,UACE,cAAC,KAAD,yBACExC,UAAWkC,IAAIS,qBACfC,gBAAiBd,EAAO,WACxBD,kBAAmBA,EACnBgB,aAAcjB,EACdzB,iBAAkBA,EAClBC,oBAAqBA,GACjBoB,GAPN,aASGV,EAAe5F,KAAI,SAAAL,GAClB,OACE,cAAC,EAAD,CAEEsC,SAAS,uBACT7C,aAAcO,EACdwC,eAAgBA,EAChBD,cAAe,EAAKA,cACpBE,wBAAyB,EAAKA,wBAC9BI,aAAW,EACX6E,wBAjOe,IAyNjB,+BAC+B1H,EAAO0C,WAY5C,cAAC,KAAD,CACEyC,UAAWkC,IAAIY,oBACfzF,eAAgBA,EAChBuF,gBAAiBd,EAAO,UACxBD,kBAAmBA,EACnBgB,aAAcjB,EACdzB,iBAAkBA,EAClBC,oBAAqBA,EACrBS,oBAAqBA,EACrBH,eAAgBA,EAChBH,yBAA0BA,EAC1BC,YAAaA,EACbC,aAAcA,EACd5B,SAAUE,KAAKF,SACfuC,qBAAsBA,EAdxB,SAgBG9G,EAAaY,KAAI,SAAAL,GAChB,OACE,cAAC,EAAD,CAEEsC,SAAS,sBACT7C,aAAcO,EACdwC,eAAgBA,EAChBD,cAAe,EAAKA,cACpBE,wBAAyB,EAAKA,wBAC9BG,UAAQ,EACRC,aAAa,GARf,8BAC8B7C,EAAO0C,UAY1CiB,EACC,qBAAKwB,UAAWyC,IAAWP,IAAIa,oBAA/B,SACE,cAAC,KAAD,CACE1F,eAAgBA,EAChBwE,kBAAmBA,EACnBnD,aAAcK,KAAKL,aACnBE,cAAeG,KAAKH,cACpBC,SAAUE,KAAKF,SACfmE,aAAc,kBAAM,EAAK5D,SAAS,CAAEZ,wBAAwB,KAN9D,SAQGyC,EAAiB/F,KAAI,SAAAL,GACpB,OACE,cAAC,EAAD,CAEEsC,SAAS,yBACT7C,aAAcO,EACdwC,eAAgBA,EAChBD,cAAe,EAAKA,cACpBE,wBAAyB,EAAKA,wBAC9BI,aAAa,GAPf,iCACiC7C,EAAO0C,YAahD,sBACEyC,UAAWyC,IAAWP,IAAIhC,SAAL,eAClBgC,IAAIe,qBAAuBpB,IAFhC,UAKGzB,EACC,oBAAIJ,UAAWkC,IAAIgB,MAAnB,SACE,cAAC,IAAD,CAAkB3F,GAAG,6BAErB,KACJ,cAAC,KAAD,CACEyC,UAAWkC,IAAIiB,oBACfjD,SAAUA,EACVS,WAAYkB,EAAoBlB,EAAa,KAC7C1B,OAAQ2B,EACRwC,iBAAkB9C,c,GAxRR+C,aAiSxB/E,EAAUgF,aAAe,CACvBtD,UAAW,KACXC,cAAe,KACfC,SAAU,GACV2C,aAAc,EACdlC,WAAY,KACZC,0BAA2B,GAC3BtG,aAAcO,IAAO0I,OAAOlJ,QAC5BiC,WAAYzB,IAAO0I,OAAOjH,YA4BbgC,Q,0DCpVFkF,EAAb,kDACE,WAAYtG,GAAQ,IAAD,8BACjB,cAAMA,IAEDqB,MAAQ,CACXkF,wBAAuC,QAAdvG,EAAMwG,IAC/BC,mBAAmB,GAGrB,EAAKC,6BAA8B,EAEnC,EAAKC,aAAeC,IAAS,EAAKD,aAAalF,KAAlB,gBAbA,KAc7B,EAAKoF,kBAAoB,EAAKA,kBAAkBpF,KAAvB,gBACzB,EAAKqF,mBAAqB,EAAKA,mBAAmBrF,KAAxB,gBAZT,EADrB,gDAkBE,SAAasF,EAAuBC,GAClC,IAAQC,EAAmCD,EAAnCC,eAAgBC,EAAmBF,EAAnBE,eAElBC,EAASlF,cACTmF,EAAiBC,YAAgB,aAAcF,GAC/CG,EACc,qBAAXC,QAA0BA,OAAOC,UAAYD,OAAOC,SAASC,SAStE,GAAIV,GANiBO,IAAgBF,EAMM,CACzC,MAA4CvF,KAAK7B,MAAzC8B,EAAR,EAAQA,QAAS0F,EAAjB,EAAiBA,SAAUpK,EAA3B,EAA2BA,aAG3B,EAAgDsK,YAAMF,EAASzF,OAAQ,CACrE4F,OAAQ,CAAC,UACTC,aAAc,CAAC,YAFTtI,EAAR,EAAQA,QAA+BE,GAAvC,EAAiBD,OAAjB,EAAyBsI,UAAzB,kBAMMnI,EAAc/B,IAAOgC,qBAAuB,CAAEN,OAAQ6H,GAAmB,GAEzEjG,EAAY,yBAChB3B,WACGI,GAFa,IAGhBH,OAAQ0H,EACRY,WAAW,GACRnJ,EAAkBc,EAAMpC,IAG7B0E,EAAQpF,KAAKsF,YAA4B,aAAcmF,EAAQ,GAAIlG,OArDzE,+BA2DE,WACEY,KAAKK,SAAS,CAAEuE,mBAAmB,MA5DvC,gCAiEE,WACE5E,KAAKK,SAAS,CAAEuE,mBAAmB,MAlEvC,oBAqEE,WAAU,IAAD,OACP,EAgBI5E,KAAK7B,MAfP8H,EADF,EACEA,KACA9E,EAFF,EAEEA,SACA5F,EAHF,EAGEA,aACAgC,EAJF,EAIEA,WACA0C,EALF,EAKEA,QACA0F,EANF,EAMEA,SACAO,EAPF,EAOEA,YACA1E,EARF,EAQEA,yBACAI,EATF,EASEA,WACAuE,EAVF,EAUEA,kBACA/E,EAXF,EAWEA,iBACAC,EAZF,EAYEA,oBACAjC,EAbF,EAaEA,aACAgH,EAdF,EAcEA,gBACA7E,EAfF,EAeEA,kBAGF,EAA4CsE,YAAMF,EAASzF,OAAQ,CACjE4F,OAAQ,CAAC,UACTC,aAAc,CAAC,YAFWM,GAA5B,EAAQL,UAAR,EAAmBM,KAAnB,kBAOMhI,EAAiBhB,EAAqB+I,EAAa9K,EAAcgC,GAOjE+D,EAJiBiF,YAAUjI,KACPiI,YACxBjJ,EAAqB8B,EAAc7D,EAAcgC,IAI7CiJ,EH/CmC,SAAC1J,EAAQxB,GACpD,IAAMyB,EAAmBzB,EAAQa,KAAI,SAAAV,GAAC,OAAIA,EAAEE,mBAAiBqB,OAAOjC,EAAS,IAG7E,OAFqBkC,OAAOC,QAAQJ,GAEhBE,QAAO,SAACG,EAAaC,GACvC,kBAAgCA,EAAhC,GAAOC,EAAP,KAAkBzB,EAAlB,KAEA,OAAOmB,EAAiBlD,SAASwD,GAA1B,2BAEEF,GACAhC,EAA6BkC,EAAWzB,EAAYN,IAHtD,2BAKE6B,GALF,kBAKgBE,EAAYzB,MAClC,IGkCwB6K,CAA8BJ,EAAa9K,GAG9DmL,EADoC,qBAAXhB,QACWA,OAAOiB,WA9G5B,IA+GfC,GACHF,GAAmBA,GAAkB1G,KAAKR,MAAMkF,wBAOnD,EAAoC2B,GAAe,GAA3C5I,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,OAAQF,EAAzB,EAAyBA,OACzB,EH1BoC,SAAC2D,EAAU1D,EAASwI,GAI1D,IAAMY,EAAY/K,IAAO+K,UACnBC,EAAgBrJ,GAAWwI,EAAKc,cAAc,CAAEvI,GAAI,+BACpDwI,EAAoBf,EAAKc,cAAc,CAAEvI,GAAI,iCAC7CyI,EAAchB,EAAKc,cACvB,CAAEvI,GAAI,0BACN,CAAEsI,gBAAeD,cAGbK,EAAiB/F,EAAShF,KAAI,SAACgL,EAAGC,GACtC,IAAMC,EAAQF,EAAEG,WAAWD,MACrBE,EAAapH,YAA4B,cAAeC,cAAsB,CAClF5B,GAAI2I,EAAE3I,GAAGgJ,KACTC,KAAMC,YAAWL,KAEnB,MAAO,CACL,QAAS,WACTM,SAAUP,EACVQ,IAAI,GAAD,OAAK9L,IAAO+L,kBAAZ,OAA+BN,GAClCxI,KAAMsI,MAUV,MAAO,CACLA,MAAOJ,EACPa,YAAad,EACbe,OAAQ,CACN,WAAY,oBACZ,QAAS,oBACTD,YAAad,EACbjI,KAAMkI,EACNe,WAAY,CAdSC,KAAK1B,UAAU,CACtC,QAAS,WACTxH,KAAM+H,EACNoB,cAAe,2CACfC,gBAAiBjB,OGJsBkB,CAAyBjH,EAAU1D,EAASwI,GAA3EoB,EAAR,EAAQA,MAAOS,EAAf,EAAeA,YAAaC,EAA5B,EAA4BA,OAItBM,EAAgBrI,KAAKR,MAAMoF,kBAC7BlB,IAAWP,IAAImF,kBAAmBnF,IAAIoF,QACtCpF,IAAIoF,OAIR,OACE,eAAC,KAAD,CACEpC,kBAAmBA,EACnB2B,YAAaA,EACbT,MAAOA,EACPU,OAAQA,EAJV,UAME,cAAC,IAAD,CACE9G,UAAWoH,EACXG,YAAY,aACZC,oBAAqBnK,IAEvB,sBAAK2C,UAAWkC,IAAIuF,UAApB,UACE,cAAC,EAAD,CACEpK,eAAgBkI,EAChBrF,SAAUA,EACVC,iBAAkBA,EAClBC,oBAAqBA,EACrBC,sBAAuBA,EACvBC,kBAAmBA,EACnBC,yBAA0BA,EAC1BC,YAAazB,KAAKgF,kBAClBtD,aAAc1B,KAAKiF,mBACnBtD,eAvCe,WACrB,EAAKgH,yBAA0B,EAC/B,EAAKtI,SAAS,CAAEqE,yBAAyB,KAsCnC9C,WAAYA,EACZC,0BAA2BgE,YAAMF,EAASzF,QAC1C4B,oBA5Ja,IA6Jb7B,QAASA,IAEX,cAAC,KAAD,CACEgB,UAAWkC,IAAIyF,SACfpK,GAAG,iBACHqK,oBAAqB7I,KAAKR,MAAMkF,wBAChCoE,QAAS,kBAAM,EAAKzI,SAAS,CAAEqE,yBAAyB,KACxD5C,oBApKa,IAqKbN,yBAA0BA,EAN5B,SAQE,qBAAKP,UAAWkC,IAAI4F,WAApB,SACGnC,EACC,cAAC,KAAD,CACEoC,2BAA4B7F,IAAIhH,IAChCiK,gBAAiBA,EACjB1I,OAAQA,EACRuL,OAAQzL,EACRkH,wBAAyB1E,KAAKR,MAAMkF,wBACpCiB,SAAUA,EACVxE,SAAU+E,GAAe,GACzBpB,aAAc9E,KAAK8E,aACnBoE,eAAgB,WACd1H,EAAyB,kBAAkB,IAE7C2H,SAAUlD,EAAKkD,WAEf,mBApLlB,GAAyC7E,aA6LzCG,EAAoBF,aAAe,CACjCpD,SAAU,GACV+E,YAAa,GACbtE,WAAY,KACZP,oBAAqB,KACrBjC,aAAc,GACduF,IAAK,WACLpJ,aAAcO,IAAO0I,OAAOlJ,QAC5BiC,WAAYzB,IAAO0I,OAAOjH,WAC1B6I,gBAAiB,MA8BnB,IAyCMgD,EAAaC,YACjBC,IACAC,aA3CsB,SAAA/J,GACtB,MAQIA,EAAM4J,WAPRI,EADF,EACEA,qBACA5H,EAFF,EAEEA,WACAR,EAHF,EAGEA,iBACAC,EAJF,EAIEA,oBACAjC,EALF,EAKEA,aACAqK,EANF,EAMEA,oBACArD,EAPF,EAOEA,gBAQF,MAAO,CACLjF,SAPmBuI,YAAgBlK,EAAOgK,GAQ1CtD,YAPkBwD,YAClBlK,EACAmK,IAAUH,EAAsBC,GAAqB,SAACG,EAAKC,GAAN,OAAcD,EAAIpC,OAASqC,EAAIrC,SAMpF5F,aACAuE,kBAAmB2D,YAAoBtK,GACvC4B,mBACAC,sBACAjC,eACAgH,sBAIuB,SAAA2D,GAAQ,MAAK,CACtCvI,yBAA0B,SAAC3C,EAAamL,GAAd,OACxBD,EAASE,YAAuBpL,EAAamL,KAC/CE,oBAAqB,SAAA9K,GAAY,OAAI2K,EAASI,YAAkB/K,KAChEmC,kBAAmB,SAAA6I,GAAS,OAAIL,EAAS1F,YAAiB+F,SAe1DC,IANiBhB,CAOjB5E,GAEa2E","file":"static/js/SearchPage.365b32de.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"topbarBehindModal\":\"SearchPage_topbarBehindModal__12Ldz\",\"topbar\":\"SearchPage_topbar__1vurt\",\"container\":\"SearchPage_container__36fyJ\",\"searchResultContainer\":\"SearchPage_searchResultContainer__r7p9S\",\"error\":\"SearchPage_error__3S-cH\",\"searchString\":\"SearchPage_searchString__1NNuT\",\"searchFiltersPrimary\":\"SearchPage_searchFiltersPrimary__sQise\",\"searchFiltersMobile\":\"SearchPage_searchFiltersMobile__3QbRR\",\"searchFiltersPanel\":\"SearchPage_searchFiltersPanel__1nxJ4\",\"listings\":\"SearchPage_listings__3HG7L\",\"newSearchInProgress\":\"SearchPage_newSearchInProgress__17J8i\",\"searchListingsPanel\":\"SearchPage_searchListingsPanel__rhIJ4\",\"mapPanel\":\"SearchPage_mapPanel__1V-MU\",\"sortBy\":\"SearchPage_sortBy__1Efn8\",\"sortByMenuLabel\":\"SearchPage_sortByMenuLabel__gYdtO\",\"mapWrapper\":\"SearchPage_mapWrapper__3eJov\",\"map\":\"SearchPage_map__3mJ6t\"};","var arrayMap = require('./_arrayMap'),\n    baseIntersection = require('./_baseIntersection'),\n    baseRest = require('./_baseRest'),\n    castArrayLikeObject = require('./_castArrayLikeObject');\n\n/**\n * Creates an array of unique values that are included in all given arrays\n * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons. The order and references of result values are\n * determined by the first array.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {...Array} [arrays] The arrays to inspect.\n * @returns {Array} Returns the new array of intersecting values.\n * @example\n *\n * _.intersection([2, 1], [2, 3]);\n * // => [2]\n */\nvar intersection = baseRest(function(arrays) {\n  var mapped = arrayMap(arrays, castArrayLikeObject);\n  return (mapped.length && mapped[0] === arrays[0])\n    ? baseIntersection(mapped)\n    : [];\n});\n\nmodule.exports = intersection;\n","var SetCache = require('./_SetCache'),\n    arrayIncludes = require('./_arrayIncludes'),\n    arrayIncludesWith = require('./_arrayIncludesWith'),\n    arrayMap = require('./_arrayMap'),\n    baseUnary = require('./_baseUnary'),\n    cacheHas = require('./_cacheHas');\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMin = Math.min;\n\n/**\n * The base implementation of methods like `_.intersection`, without support\n * for iteratee shorthands, that accepts an array of arrays to inspect.\n *\n * @private\n * @param {Array} arrays The arrays to inspect.\n * @param {Function} [iteratee] The iteratee invoked per element.\n * @param {Function} [comparator] The comparator invoked per element.\n * @returns {Array} Returns the new array of shared values.\n */\nfunction baseIntersection(arrays, iteratee, comparator) {\n  var includes = comparator ? arrayIncludesWith : arrayIncludes,\n      length = arrays[0].length,\n      othLength = arrays.length,\n      othIndex = othLength,\n      caches = Array(othLength),\n      maxLength = Infinity,\n      result = [];\n\n  while (othIndex--) {\n    var array = arrays[othIndex];\n    if (othIndex && iteratee) {\n      array = arrayMap(array, baseUnary(iteratee));\n    }\n    maxLength = nativeMin(array.length, maxLength);\n    caches[othIndex] = !comparator && (iteratee || (length >= 120 && array.length >= 120))\n      ? new SetCache(othIndex && array)\n      : undefined;\n  }\n  array = arrays[0];\n\n  var index = -1,\n      seen = caches[0];\n\n  outer:\n  while (++index < length && result.length < maxLength) {\n    var value = array[index],\n        computed = iteratee ? iteratee(value) : value;\n\n    value = (comparator || value !== 0) ? value : 0;\n    if (!(seen\n          ? cacheHas(seen, computed)\n          : includes(result, computed, comparator)\n        )) {\n      othIndex = othLength;\n      while (--othIndex) {\n        var cache = caches[othIndex];\n        if (!(cache\n              ? cacheHas(cache, computed)\n              : includes(arrays[othIndex], computed, comparator))\n            ) {\n          continue outer;\n        }\n      }\n      if (seen) {\n        seen.push(computed);\n      }\n      result.push(value);\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseIntersection;\n","var isArrayLikeObject = require('./isArrayLikeObject');\n\n/**\n * Casts `value` to an empty array if it's not an array like object.\n *\n * @private\n * @param {*} value The value to inspect.\n * @returns {Array|Object} Returns the cast array-like object.\n */\nfunction castArrayLikeObject(value) {\n  return isArrayLikeObject(value) ? value : [];\n}\n\nmodule.exports = castArrayLikeObject;\n","import intersection from 'lodash/intersection';\nimport config from '../../config';\nimport { createResourceLocatorString } from '../../util/routes';\nimport { parseSelectFilterOptions } from '../../util/search';\nimport { createSlug } from '../../util/urlHelpers';\nimport routeConfiguration from '../../routeConfiguration';\n\nconst flatten = (acc, val) => acc.concat(val);\n\n/**\n * Validates a filter search param agains a filters configuration.\n *\n * All invalid param names and values are dropped\n *\n * @param {String} queryParamName Search parameter name\n * @param {Object} paramValue Search parameter value\n * @param {Object} filters Filters configuration\n */\nexport const validURLParamForExtendedData = (queryParamName, paramValueRaw, filters) => {\n  // Resolve configuration for this filter\n  const filterConfig = filters.find(f => {\n    const isArray = Array.isArray(f.queryParamNames);\n    return isArray\n      ? f.queryParamNames.includes(queryParamName)\n      : f.queryParamNames === queryParamName;\n  });\n\n  const paramValue = paramValueRaw.toString();\n\n  if (filterConfig) {\n    const { min, max } = filterConfig.config || {};\n\n    if (['SelectSingleFilter', 'SelectMultipleFilter'].includes(filterConfig.type)) {\n      // Pick valid select options only\n      const allowedValues = filterConfig.config.options.map(o => o.key);\n      const searchMode = filterConfig.config.searchMode;\n      const valueArray = parseSelectFilterOptions(paramValue);\n      const validValues = intersection(valueArray, allowedValues).join(',');\n\n      return validValues.length > 0\n        ? { [queryParamName]: searchMode ? `${searchMode}:${validValues}` : validValues }\n        : {};\n    } else if (filterConfig.type === 'PriceFilter') {\n      // Restrict price range to correct min & max\n      const valueArray = paramValue ? paramValue.split(',') : [];\n      const validValues = valueArray.map(v => {\n        return v < min ? min : v > max ? max : v;\n      });\n      return validValues.length === 2 ? { [queryParamName]: validValues.join(',') } : {};\n    } else if (filterConfig) {\n      // Generic filter - remove empty params\n      return paramValue.length > 0 ? { [queryParamName]: paramValue } : {};\n    }\n  }\n  return {};\n};\n\n/**\n * Checks filter param value validity.\n *\n * Non-filter params are dropped.\n *\n * @param {Object} params Search params\n * @param {Object} filters Filters configuration\n */\nexport const validFilterParams = (params, filters) => {\n  const filterParamNames = filters.map(f => f.queryParamNames).reduce(flatten, []);\n  const paramEntries = Object.entries(params);\n\n  return paramEntries.reduce((validParams, entry) => {\n    const [paramName, paramValue] = entry;\n\n    return filterParamNames.includes(paramName)\n      ? {\n          ...validParams,\n          ...validURLParamForExtendedData(paramName, paramValue, filters),\n        }\n      : { ...validParams };\n  }, {});\n};\n\n/**\n * Checks filter param value validity.\n *\n * Non-filter params are returned as they are.\n *\n * @param {Object} params Search params\n * @param {Object} filters Filters configuration\n */\nexport const validURLParamsForExtendedData = (params, filters) => {\n  const filterParamNames = filters.map(f => f.queryParamNames).reduce(flatten, []);\n  const paramEntries = Object.entries(params);\n\n  return paramEntries.reduce((validParams, entry) => {\n    const [paramName, paramValue] = entry;\n\n    return filterParamNames.includes(paramName)\n      ? {\n          ...validParams,\n          ...validURLParamForExtendedData(paramName, paramValue, filters),\n        }\n      : { ...validParams, [paramName]: paramValue };\n  }, {});\n};\n\n// extract search parameters, including a custom URL params\n// which are validated by mapping the values to marketplace custom config.\nexport const pickSearchParamsOnly = (params, filters, sortConfig) => {\n  const { address, origin, bounds, ...rest } = params || {};\n  const boundsMaybe = bounds ? { bounds } : {};\n  const originMaybe = config.sortSearchByDistance && origin ? { origin } : {};\n  const filterParams = validFilterParams(rest, filters);\n  const sort = rest[sortConfig.queryParamName];\n  const sortMaybe = sort ? { sort } : {};\n\n  return {\n    ...boundsMaybe,\n    ...originMaybe,\n    ...filterParams,\n    ...sortMaybe,\n  };\n};\n\nexport const createSearchResultSchema = (listings, address, intl) => {\n  // Schema for search engines (helps them to understand what this page is about)\n  // http://schema.org\n  // We are using JSON-LD format\n  const siteTitle = config.siteTitle;\n  const searchAddress = address || intl.formatMessage({ id: 'SearchPage.schemaMapSearch' });\n  const schemaDescription = intl.formatMessage({ id: 'SearchPage.schemaDescription' });\n  const schemaTitle = intl.formatMessage(\n    { id: 'SearchPage.schemaTitle' },\n    { searchAddress, siteTitle }\n  );\n\n  const schemaListings = listings.map((l, i) => {\n    const title = l.attributes.title;\n    const pathToItem = createResourceLocatorString('ListingPage', routeConfiguration(), {\n      id: l.id.uuid,\n      slug: createSlug(title),\n    });\n    return {\n      '@type': 'ListItem',\n      position: i,\n      url: `${config.canonicalRootURL}${pathToItem}`,\n      name: title,\n    };\n  });\n\n  const schemaMainEntity = JSON.stringify({\n    '@type': 'ItemList',\n    name: searchAddress,\n    itemListOrder: 'http://schema.org/ItemListOrderAscending',\n    itemListElement: schemaListings,\n  });\n  return {\n    title: schemaTitle,\n    description: schemaDescription,\n    schema: {\n      '@context': 'http://schema.org',\n      '@type': 'SearchResultsPage',\n      description: schemaDescription,\n      name: schemaTitle,\n      mainEntity: [schemaMainEntity],\n    },\n  };\n};\n","import React from 'react';\nimport {\n  BookingDateRangeFilter,\n  PriceFilter,\n  KeywordFilter,\n  SelectSingleFilter,\n  SelectMultipleFilter,\n} from '../../components';\n\n/**\n * FilterComponent is used to map configured filter types\n * to actual filter components\n */\nconst FilterComponent = props => {\n  const {\n    idPrefix,\n    filterConfig,\n    urlQueryParams,\n    initialValues,\n    getHandleChangedValueFn,\n    ...rest\n  } = props;\n  const { id, type, queryParamNames, label, config } = filterConfig;\n  const { liveEdit, showAsPopup } = rest;\n\n  const useHistoryPush = liveEdit || showAsPopup;\n  const prefix = idPrefix || 'SearchPage';\n  const componentId = `${prefix}.${id.toLowerCase()}`;\n  const name = id.replace(/\\s+/g, '-').toLowerCase();\n\n  switch (type) {\n    case 'SelectSingleFilter': {\n      return (\n        <SelectSingleFilter\n          id={componentId}\n          label={label}\n          queryParamNames={queryParamNames}\n          initialValues={initialValues(queryParamNames)}\n          onSelect={getHandleChangedValueFn(useHistoryPush)}\n          {...config}\n          {...rest}\n        />\n      );\n    }\n    case 'SelectMultipleFilter': {\n      return (\n        <SelectMultipleFilter\n          id={componentId}\n          label={label}\n          name={name}\n          queryParamNames={queryParamNames}\n          initialValues={initialValues(queryParamNames)}\n          onSubmit={getHandleChangedValueFn(useHistoryPush)}\n          {...config}\n          {...rest}\n        />\n      );\n    }\n    case 'BookingDateRangeFilter': {\n      return (\n        <BookingDateRangeFilter\n          id={componentId}\n          label={label}\n          queryParamNames={queryParamNames}\n          initialValues={initialValues(queryParamNames)}\n          onSubmit={getHandleChangedValueFn(useHistoryPush)}\n          {...config}\n          {...rest}\n        />\n      );\n    }\n    case 'PriceFilter': {\n      return (\n        <PriceFilter\n          id={componentId}\n          label={label}\n          queryParamNames={queryParamNames}\n          initialValues={initialValues(queryParamNames)}\n          onSubmit={getHandleChangedValueFn(useHistoryPush)}\n          {...config}\n          {...rest}\n        />\n      );\n    }\n    case 'KeywordFilter':\n      return (\n        <KeywordFilter\n          id={componentId}\n          label={label}\n          name={name}\n          queryParamNames={queryParamNames}\n          initialValues={initialValues(queryParamNames)}\n          onSubmit={getHandleChangedValueFn(useHistoryPush)}\n          {...config}\n          {...rest}\n        />\n      );\n    default:\n      return null;\n  }\n};\n\nexport default FilterComponent;\n","import React, { Component } from 'react';\nimport { array, bool, func, number, object, shape, string } from 'prop-types';\nimport classNames from 'classnames';\nimport omit from 'lodash/omit';\nimport config from '../../config';\nimport routeConfiguration from '../../routeConfiguration';\nimport { FormattedMessage } from '../../util/reactIntl';\nimport { createResourceLocatorString } from '../../util/routes';\nimport { isAnyFilterActive } from '../../util/search';\nimport { propTypes } from '../../util/types';\nimport {\n  SearchResultsPanel,\n  SearchFiltersMobile,\n  SearchFiltersPrimary,\n  SearchFiltersSecondary,\n  SortBy,\n} from '../../components';\n\nimport FilterComponent from './FilterComponent';\nimport { validFilterParams } from './SearchPage.helpers';\n\nimport css from './SearchPage.module.css';\n\n// Primary filters have their content in dropdown-popup.\n// With this offset we move the dropdown to the left a few pixels on desktop layout.\nconst FILTER_DROPDOWN_OFFSET = -14;\n\nconst cleanSearchFromConflictingParams = (searchParams, sortConfig, filterConfig) => {\n  // Single out filters that should disable SortBy when an active\n  // keyword search sorts the listings according to relevance.\n  // In those cases, sort parameter should be removed.\n  const sortingFiltersActive = isAnyFilterActive(\n    sortConfig.conflictingFilters,\n    searchParams,\n    filterConfig\n  );\n  return sortingFiltersActive\n    ? { ...searchParams, [sortConfig.queryParamName]: null }\n    : searchParams;\n};\n\n/**\n * MainPanel contains search results and filters.\n * There are 3 presentational container-components that show filters:\n * SearchfiltersMobile, SearchFiltersPrimary, and SearchFiltersSecondary.\n * The last 2 are for desktop layout.\n */\nclass MainPanel extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { isSecondaryFiltersOpen: false, currentQueryParams: props.urlQueryParams };\n\n    this.applyFilters = this.applyFilters.bind(this);\n    this.cancelFilters = this.cancelFilters.bind(this);\n    this.resetAll = this.resetAll.bind(this);\n\n    this.initialValues = this.initialValues.bind(this);\n    this.getHandleChangedValueFn = this.getHandleChangedValueFn.bind(this);\n\n    // SortBy\n    this.handleSortBy = this.handleSortBy.bind(this);\n  }\n\n  // Apply the filters by redirecting to SearchPage with new filters.\n  applyFilters() {\n    const { history, urlQueryParams, sortConfig, filterConfig } = this.props;\n    const searchParams = { ...urlQueryParams, ...this.state.currentQueryParams };\n    const search = cleanSearchFromConflictingParams(searchParams, sortConfig, filterConfig);\n\n    history.push(createResourceLocatorString('SearchPage', routeConfiguration(), {}, search));\n  }\n\n  // Close the filters by clicking cancel, revert to the initial params\n  cancelFilters() {\n    this.setState({ currentQueryParams: {} });\n  }\n\n  // Reset all filter query parameters\n  resetAll(e) {\n    const { urlQueryParams, history, filterConfig } = this.props;\n    const filterQueryParamNames = filterConfig.map(f => f.queryParamNames);\n\n    // Reset state\n    this.setState({ currentQueryParams: {} });\n\n    // Reset routing params\n    const queryParams = omit(urlQueryParams, filterQueryParamNames);\n    history.push(createResourceLocatorString('SearchPage', routeConfiguration(), {}, queryParams));\n  }\n\n  initialValues(queryParamNames) {\n    // Query parameters that are visible in the URL\n    const urlQueryParams = this.props.urlQueryParams;\n    // Query parameters that are in state (user might have not yet clicked \"Apply\")\n    const currentQueryParams = this.state.currentQueryParams;\n\n    // Get initial value for a given parameter from state if its there.\n    const getInitialValue = paramName => {\n      const currentQueryParam = currentQueryParams[paramName];\n      const hasQueryParamInState = typeof currentQueryParam !== 'undefined';\n      return hasQueryParamInState ? currentQueryParam : urlQueryParams[paramName];\n    };\n\n    // Return all the initial values related to given queryParamNames\n    // InitialValues for \"amenities\" filter could be\n    // { amenities: \"has_any:towel,jacuzzi\" }\n    const isArray = Array.isArray(queryParamNames);\n    return isArray\n      ? queryParamNames.reduce((acc, paramName) => {\n          return { ...acc, [paramName]: getInitialValue(paramName) };\n        }, {})\n      : {};\n  }\n\n  getHandleChangedValueFn(useHistoryPush) {\n    const { urlQueryParams, history, sortConfig, filterConfig } = this.props;\n\n    return updatedURLParams => {\n      const updater = prevState => {\n        const { address, bounds } = urlQueryParams;\n        const mergedQueryParams = { ...urlQueryParams, ...prevState.currentQueryParams };\n\n        // Address and bounds are handled outside of MainPanel.\n        // I.e. TopbarSearchForm && search by moving the map.\n        // We should always trust urlQueryParams with those.\n        return {\n          currentQueryParams: { ...mergedQueryParams, ...updatedURLParams, address, bounds },\n        };\n      };\n\n      const callback = () => {\n        if (useHistoryPush) {\n          const searchParams = this.state.currentQueryParams;\n          const search = cleanSearchFromConflictingParams(searchParams, sortConfig, filterConfig);\n          history.push(createResourceLocatorString('SearchPage', routeConfiguration(), {}, search));\n        }\n      };\n\n      this.setState(updater, callback);\n    };\n  }\n\n  handleSortBy(urlParam, values) {\n    const { history, urlQueryParams } = this.props;\n    const queryParams = values\n      ? { ...urlQueryParams, [urlParam]: values }\n      : omit(urlQueryParams, urlParam);\n\n    history.push(createResourceLocatorString('SearchPage', routeConfiguration(), {}, queryParams));\n  }\n\n  render() {\n    const {\n      className,\n      rootClassName,\n      urlQueryParams,\n      listings,\n      searchInProgress,\n      searchListingsError,\n      searchParamsAreInSync,\n      onActivateListing,\n      onManageDisableScrolling,\n      onOpenModal,\n      onCloseModal,\n      onMapIconClick,\n      pagination,\n      searchParamsForPagination,\n      showAsModalMaxWidth,\n      filterConfig,\n      sortConfig,\n    } = this.props;\n\n    const primaryFilters = filterConfig.filter(f => f.group === 'primary');\n    const secondaryFilters = filterConfig.filter(f => f.group !== 'primary');\n    const hasSecondaryFilters = !!(secondaryFilters && secondaryFilters.length > 0);\n\n    // Selected aka active filters\n    const selectedFilters = validFilterParams(urlQueryParams, filterConfig);\n    const selectedFiltersCount = Object.keys(selectedFilters).length;\n\n    // Selected aka active secondary filters\n    const selectedSecondaryFilters = hasSecondaryFilters\n      ? validFilterParams(urlQueryParams, secondaryFilters)\n      : {};\n    const selectedSecondaryFiltersCount = Object.keys(selectedSecondaryFilters).length;\n\n    const isSecondaryFiltersOpen = !!hasSecondaryFilters && this.state.isSecondaryFiltersOpen;\n    const propsForSecondaryFiltersToggle = hasSecondaryFilters\n      ? {\n          isSecondaryFiltersOpen: this.state.isSecondaryFiltersOpen,\n          toggleSecondaryFiltersOpen: isOpen => {\n            this.setState({ isSecondaryFiltersOpen: isOpen });\n          },\n          selectedSecondaryFiltersCount,\n        }\n      : {};\n\n    const hasPaginationInfo = !!pagination && pagination.totalItems != null;\n    const totalItems = searchParamsAreInSync && hasPaginationInfo ? pagination.totalItems : 0;\n    const listingsAreLoaded = !searchInProgress && searchParamsAreInSync && hasPaginationInfo;\n\n    const sortBy = mode => {\n      const conflictingFilterActive = isAnyFilterActive(\n        sortConfig.conflictingFilters,\n        urlQueryParams,\n        filterConfig\n      );\n\n      const mobileClassesMaybe =\n        mode === 'mobile'\n          ? {\n              rootClassName: css.sortBy,\n              menuLabelRootClassName: css.sortByMenuLabel,\n            }\n          : {};\n      return sortConfig.active ? (\n        <SortBy\n          {...mobileClassesMaybe}\n          sort={urlQueryParams[sortConfig.queryParamName]}\n          isConflictingFilterActive={!!conflictingFilterActive}\n          onSelect={this.handleSortBy}\n          showAsPopup\n          contentPlacementOffset={FILTER_DROPDOWN_OFFSET}\n        />\n      ) : null;\n    };\n\n    const classes = classNames(rootClassName || css.searchResultContainer, className);\n\n    return (\n      <div className={classes}>\n        <SearchFiltersPrimary\n          className={css.searchFiltersPrimary}\n          sortByComponent={sortBy('desktop')}\n          listingsAreLoaded={listingsAreLoaded}\n          resultsCount={totalItems}\n          searchInProgress={searchInProgress}\n          searchListingsError={searchListingsError}\n          {...propsForSecondaryFiltersToggle}\n        >\n          {primaryFilters.map(config => {\n            return (\n              <FilterComponent\n                key={`SearchFiltersPrimary.${config.id}`}\n                idPrefix=\"SearchFiltersPrimary\"\n                filterConfig={config}\n                urlQueryParams={urlQueryParams}\n                initialValues={this.initialValues}\n                getHandleChangedValueFn={this.getHandleChangedValueFn}\n                showAsPopup\n                contentPlacementOffset={FILTER_DROPDOWN_OFFSET}\n              />\n            );\n          })}\n        </SearchFiltersPrimary>\n        <SearchFiltersMobile\n          className={css.searchFiltersMobile}\n          urlQueryParams={urlQueryParams}\n          sortByComponent={sortBy('mobile')}\n          listingsAreLoaded={listingsAreLoaded}\n          resultsCount={totalItems}\n          searchInProgress={searchInProgress}\n          searchListingsError={searchListingsError}\n          showAsModalMaxWidth={showAsModalMaxWidth}\n          onMapIconClick={onMapIconClick}\n          onManageDisableScrolling={onManageDisableScrolling}\n          onOpenModal={onOpenModal}\n          onCloseModal={onCloseModal}\n          resetAll={this.resetAll}\n          selectedFiltersCount={selectedFiltersCount}\n        >\n          {filterConfig.map(config => {\n            return (\n              <FilterComponent\n                key={`SearchFiltersMobile.${config.id}`}\n                idPrefix=\"SearchFiltersMobile\"\n                filterConfig={config}\n                urlQueryParams={urlQueryParams}\n                initialValues={this.initialValues}\n                getHandleChangedValueFn={this.getHandleChangedValueFn}\n                liveEdit\n                showAsPopup={false}\n              />\n            );\n          })}\n        </SearchFiltersMobile>\n        {isSecondaryFiltersOpen ? (\n          <div className={classNames(css.searchFiltersPanel)}>\n            <SearchFiltersSecondary\n              urlQueryParams={urlQueryParams}\n              listingsAreLoaded={listingsAreLoaded}\n              applyFilters={this.applyFilters}\n              cancelFilters={this.cancelFilters}\n              resetAll={this.resetAll}\n              onClosePanel={() => this.setState({ isSecondaryFiltersOpen: false })}\n            >\n              {secondaryFilters.map(config => {\n                return (\n                  <FilterComponent\n                    key={`SearchFiltersSecondary.${config.id}`}\n                    idPrefix=\"SearchFiltersSecondary\"\n                    filterConfig={config}\n                    urlQueryParams={urlQueryParams}\n                    initialValues={this.initialValues}\n                    getHandleChangedValueFn={this.getHandleChangedValueFn}\n                    showAsPopup={false}\n                  />\n                );\n              })}\n            </SearchFiltersSecondary>\n          </div>\n        ) : (\n          <div\n            className={classNames(css.listings, {\n              [css.newSearchInProgress]: !listingsAreLoaded,\n            })}\n          >\n            {searchListingsError ? (\n              <h2 className={css.error}>\n                <FormattedMessage id=\"SearchPage.searchError\" />\n              </h2>\n            ) : null}\n            <SearchResultsPanel\n              className={css.searchListingsPanel}\n              listings={listings}\n              pagination={listingsAreLoaded ? pagination : null}\n              search={searchParamsForPagination}\n              setActiveListing={onActivateListing}\n            />\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nMainPanel.defaultProps = {\n  className: null,\n  rootClassName: null,\n  listings: [],\n  resultsCount: 0,\n  pagination: null,\n  searchParamsForPagination: {},\n  filterConfig: config.custom.filters,\n  sortConfig: config.custom.sortConfig,\n};\n\nMainPanel.propTypes = {\n  className: string,\n  rootClassName: string,\n\n  urlQueryParams: object.isRequired,\n  listings: array,\n  searchInProgress: bool.isRequired,\n  searchListingsError: propTypes.error,\n  searchParamsAreInSync: bool.isRequired,\n  onActivateListing: func.isRequired,\n  onManageDisableScrolling: func.isRequired,\n  onOpenModal: func.isRequired,\n  onCloseModal: func.isRequired,\n  onMapIconClick: func.isRequired,\n  pagination: propTypes.pagination,\n  searchParamsForPagination: object,\n  showAsModalMaxWidth: number.isRequired,\n  filterConfig: propTypes.filterConfig,\n  sortConfig: propTypes.sortConfig,\n\n  history: shape({\n    push: func.isRequired,\n  }).isRequired,\n};\n\nexport default MainPanel;\n","import React, { Component } from 'react';\nimport { array, bool, func, oneOf, object, shape, string } from 'prop-types';\nimport { injectIntl, intlShape } from '../../util/reactIntl';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { withRouter } from 'react-router-dom';\nimport debounce from 'lodash/debounce';\nimport unionWith from 'lodash/unionWith';\nimport classNames from 'classnames';\nimport config from '../../config';\nimport routeConfiguration from '../../routeConfiguration';\nimport { createResourceLocatorString, pathByRouteName } from '../../util/routes';\nimport { parse, stringify } from '../../util/urlHelpers';\nimport { propTypes } from '../../util/types';\nimport { getListingsById } from '../../ducks/marketplaceData.duck';\nimport { manageDisableScrolling, isScrollingDisabled } from '../../ducks/UI.duck';\nimport { SearchMap, ModalInMobile, Page } from '../../components';\nimport { TopbarContainer } from '../../containers';\n\nimport { searchMapListings, setActiveListing } from './SearchPage.duck';\nimport {\n  pickSearchParamsOnly,\n  validURLParamsForExtendedData,\n  validFilterParams,\n  createSearchResultSchema,\n} from './SearchPage.helpers';\nimport MainPanel from './MainPanel';\nimport css from './SearchPage.module.css';\n\nconst MODAL_BREAKPOINT = 768; // Search is in modal on mobile layout\nconst SEARCH_WITH_MAP_DEBOUNCE = 300; // Little bit of debounce before search is initiated.\n\nexport class SearchPageComponent extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isSearchMapOpenOnMobile: props.tab === 'map',\n      isMobileModalOpen: false,\n    };\n\n    this.searchMapListingsInProgress = false;\n\n    this.onMapMoveEnd = debounce(this.onMapMoveEnd.bind(this), SEARCH_WITH_MAP_DEBOUNCE);\n    this.onOpenMobileModal = this.onOpenMobileModal.bind(this);\n    this.onCloseMobileModal = this.onCloseMobileModal.bind(this);\n  }\n\n  // Callback to determine if new search is needed\n  // when map is moved by user or viewport has changed\n  onMapMoveEnd(viewportBoundsChanged, data) {\n    const { viewportBounds, viewportCenter } = data;\n\n    const routes = routeConfiguration();\n    const searchPagePath = pathByRouteName('SearchPage', routes);\n    const currentPath =\n      typeof window !== 'undefined' && window.location && window.location.pathname;\n\n    // When using the ReusableMapContainer onMapMoveEnd can fire from other pages than SearchPage too\n    const isSearchPage = currentPath === searchPagePath;\n\n    // If mapSearch url param is given\n    // or original location search is rendered once,\n    // we start to react to \"mapmoveend\" events by generating new searches\n    // (i.e. 'moveend' event in Mapbox and 'bounds_changed' in Google Maps)\n    if (viewportBoundsChanged && isSearchPage) {\n      const { history, location, filterConfig } = this.props;\n\n      // parse query parameters, including a custom attribute named category\n      const { address, bounds, mapSearch, ...rest } = parse(location.search, {\n        latlng: ['origin'],\n        latlngBounds: ['bounds'],\n      });\n\n      //const viewportMapCenter = SearchMap.getMapCenter(map);\n      const originMaybe = config.sortSearchByDistance ? { origin: viewportCenter } : {};\n\n      const searchParams = {\n        address,\n        ...originMaybe,\n        bounds: viewportBounds,\n        mapSearch: true,\n        ...validFilterParams(rest, filterConfig),\n      };\n\n      history.push(createResourceLocatorString('SearchPage', routes, {}, searchParams));\n    }\n  }\n\n  // Invoked when a modal is opened from a child component,\n  // for example when a filter modal is opened in mobile view\n  onOpenMobileModal() {\n    this.setState({ isMobileModalOpen: true });\n  }\n\n  // Invoked when a modal is closed from a child component,\n  // for example when a filter modal is opened in mobile view\n  onCloseMobileModal() {\n    this.setState({ isMobileModalOpen: false });\n  }\n\n  render() {\n    const {\n      intl,\n      listings,\n      filterConfig,\n      sortConfig,\n      history,\n      location,\n      mapListings,\n      onManageDisableScrolling,\n      pagination,\n      scrollingDisabled,\n      searchInProgress,\n      searchListingsError,\n      searchParams,\n      activeListingId,\n      onActivateListing,\n    } = this.props;\n    // eslint-disable-next-line no-unused-vars\n    const { mapSearch, page, ...searchInURL } = parse(location.search, {\n      latlng: ['origin'],\n      latlngBounds: ['bounds'],\n    });\n\n    // urlQueryParams doesn't contain page specific url params\n    // like mapSearch, page or origin (origin depends on config.sortSearchByDistance)\n    const urlQueryParams = pickSearchParamsOnly(searchInURL, filterConfig, sortConfig);\n\n    // Page transition might initially use values from previous search\n    const urlQueryString = stringify(urlQueryParams);\n    const paramsQueryString = stringify(\n      pickSearchParamsOnly(searchParams, filterConfig, sortConfig)\n    );\n    const searchParamsAreInSync = urlQueryString === paramsQueryString;\n\n    const validQueryParams = validURLParamsForExtendedData(searchInURL, filterConfig);\n\n    const isWindowDefined = typeof window !== 'undefined';\n    const isMobileLayout = isWindowDefined && window.innerWidth < MODAL_BREAKPOINT;\n    const shouldShowSearchMap =\n      !isMobileLayout || (isMobileLayout && this.state.isSearchMapOpenOnMobile);\n\n    const onMapIconClick = () => {\n      this.useLocationSearchBounds = true;\n      this.setState({ isSearchMapOpenOnMobile: true });\n    };\n\n    const { address, bounds, origin } = searchInURL || {};\n    const { title, description, schema } = createSearchResultSchema(listings, address, intl);\n\n    // Set topbar class based on if a modal is open in\n    // a child component\n    const topbarClasses = this.state.isMobileModalOpen\n      ? classNames(css.topbarBehindModal, css.topbar)\n      : css.topbar;\n\n    // N.B. openMobileMap button is sticky.\n    // For some reason, stickyness doesn't work on Safari, if the element is <button>\n    return (\n      <Page\n        scrollingDisabled={scrollingDisabled}\n        description={description}\n        title={title}\n        schema={schema}\n      >\n        <TopbarContainer\n          className={topbarClasses}\n          currentPage=\"SearchPage\"\n          currentSearchParams={urlQueryParams}\n        />\n        <div className={css.container}>\n          <MainPanel\n            urlQueryParams={validQueryParams}\n            listings={listings}\n            searchInProgress={searchInProgress}\n            searchListingsError={searchListingsError}\n            searchParamsAreInSync={searchParamsAreInSync}\n            onActivateListing={onActivateListing}\n            onManageDisableScrolling={onManageDisableScrolling}\n            onOpenModal={this.onOpenMobileModal}\n            onCloseModal={this.onCloseMobileModal}\n            onMapIconClick={onMapIconClick}\n            pagination={pagination}\n            searchParamsForPagination={parse(location.search)}\n            showAsModalMaxWidth={MODAL_BREAKPOINT}\n            history={history}\n          />\n          <ModalInMobile\n            className={css.mapPanel}\n            id=\"SearchPage.map\"\n            isModalOpenOnMobile={this.state.isSearchMapOpenOnMobile}\n            onClose={() => this.setState({ isSearchMapOpenOnMobile: false })}\n            showAsModalMaxWidth={MODAL_BREAKPOINT}\n            onManageDisableScrolling={onManageDisableScrolling}\n          >\n            <div className={css.mapWrapper}>\n              {shouldShowSearchMap ? (\n                <SearchMap\n                  reusableContainerClassName={css.map}\n                  activeListingId={activeListingId}\n                  bounds={bounds}\n                  center={origin}\n                  isSearchMapOpenOnMobile={this.state.isSearchMapOpenOnMobile}\n                  location={location}\n                  listings={mapListings || []}\n                  onMapMoveEnd={this.onMapMoveEnd}\n                  onCloseAsModal={() => {\n                    onManageDisableScrolling('SearchPage.map', false);\n                  }}\n                  messages={intl.messages}\n                />\n              ) : null}\n            </div>\n          </ModalInMobile>\n        </div>\n      </Page>\n    );\n  }\n}\n\nSearchPageComponent.defaultProps = {\n  listings: [],\n  mapListings: [],\n  pagination: null,\n  searchListingsError: null,\n  searchParams: {},\n  tab: 'listings',\n  filterConfig: config.custom.filters,\n  sortConfig: config.custom.sortConfig,\n  activeListingId: null,\n};\n\nSearchPageComponent.propTypes = {\n  listings: array,\n  mapListings: array,\n  onActivateListing: func.isRequired,\n  onManageDisableScrolling: func.isRequired,\n  onSearchMapListings: func.isRequired,\n  pagination: propTypes.pagination,\n  scrollingDisabled: bool.isRequired,\n  searchInProgress: bool.isRequired,\n  searchListingsError: propTypes.error,\n  searchParams: object,\n  tab: oneOf(['filters', 'listings', 'map']).isRequired,\n  filterConfig: propTypes.filterConfig,\n  sortConfig: propTypes.sortConfig,\n\n  // from withRouter\n  history: shape({\n    push: func.isRequired,\n  }).isRequired,\n  location: shape({\n    search: string.isRequired,\n  }).isRequired,\n\n  // from injectIntl\n  intl: intlShape.isRequired,\n};\n\nconst mapStateToProps = state => {\n  const {\n    currentPageResultIds,\n    pagination,\n    searchInProgress,\n    searchListingsError,\n    searchParams,\n    searchMapListingIds,\n    activeListingId,\n  } = state.SearchPage;\n  const pageListings = getListingsById(state, currentPageResultIds);\n  const mapListings = getListingsById(\n    state,\n    unionWith(currentPageResultIds, searchMapListingIds, (id1, id2) => id1.uuid === id2.uuid)\n  );\n\n  return {\n    listings: pageListings,\n    mapListings,\n    pagination,\n    scrollingDisabled: isScrollingDisabled(state),\n    searchInProgress,\n    searchListingsError,\n    searchParams,\n    activeListingId,\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  onManageDisableScrolling: (componentId, disableScrolling) =>\n    dispatch(manageDisableScrolling(componentId, disableScrolling)),\n  onSearchMapListings: searchParams => dispatch(searchMapListings(searchParams)),\n  onActivateListing: listingId => dispatch(setActiveListing(listingId)),\n});\n\n// Note: it is important that the withRouter HOC is **outside** the\n// connect HOC, otherwise React Router won't rerender any Route\n// components since connect implements a shouldComponentUpdate\n// lifecycle hook.\n//\n// See: https://github.com/ReactTraining/react-router/issues/4671\nconst SearchPage = compose(\n  withRouter,\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  ),\n  injectIntl\n)(SearchPageComponent);\n\nexport default SearchPage;\n"],"sourceRoot":""}