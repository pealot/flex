{"version":3,"sources":["containers/TermsOfServicePage/TermsOfServicePage.module.css","containers/TermsOfServicePage/TermsOfServicePage.js"],"names":["module","exports","TermsOfServicePage","PropTypes","bool","compose","connect","state","scrollingDisabled","isScrollingDisabled","injectIntl","props","intl","tabs","text","formatMessage","id","selected","linkProps","name","siteTitle","config","schemaTitle","schema","title","currentPage","className","css","content","heading"],"mappings":"uGACAA,EAAOC,QAAU,CAAC,QAAU,oCAAoC,QAAU,sC,kCCD1E,kHA4FMC,GAfWC,IAATC,KAemBC,YACzBC,aAPsB,SAAAC,GACtB,MAAO,CACLC,kBAAmBC,YAAoBF,OAMzCG,IAFyBL,EAvES,SAAAM,GAClC,IAAQH,EAA4BG,EAA5BH,kBAAmBI,EAASD,EAATC,KAErBC,EAAO,CACX,CACEC,KAAMF,EAAKG,cAAc,CAAEC,GAAI,uCAC/BC,UAAU,EACVC,UAAW,CACTC,KAAM,sBAGV,CACEL,KAAMF,EAAKG,cAAc,CAAEC,GAAI,mCAC/BC,UAAU,EACVC,UAAW,CACTC,KAAM,uBAGV,CACEL,KAAMF,EAAKG,cAAc,CAAEC,GAAI,4CAC/BC,UAAU,EACVC,UAAW,CACTC,KAAM,sBAINC,EAAYC,IAAOD,UACnBE,EAAcV,EAAKG,cAAc,CAAEC,GAAI,kCAAoC,CAAEI,cAC7EG,EAAS,CACb,WAAY,oBACZ,QAAS,UACTJ,KAAMG,GAER,OACE,cAAC,KAAD,CAAME,MAAOF,EAAad,kBAAmBA,EAAmBe,OAAQA,EAAxE,SACE,eAAC,KAAD,WACE,cAAC,KAAD,UACE,cAAC,IAAD,CAAiBE,YAAY,yBAE/B,cAAC,KAAD,CAAsBZ,KAAMA,IAC5B,cAAC,KAAD,UACE,sBAAKa,UAAWC,IAAIC,QAApB,UACE,oBAAIF,UAAWC,IAAIE,QAAnB,SACE,cAAC,IAAD,CAAkBb,GAAG,iCAEvB,cAAC,KAAD,SAGJ,cAAC,KAAD,UACE,cAAC,IAAD,eA2BKd","file":"static/js/TermsOfServicePage.a6c51852.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"heading\":\"TermsOfServicePage_heading__1pxae\",\"content\":\"TermsOfServicePage_content__1dat0\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from 'redux';\nimport { connect } from 'react-redux';\nimport { FormattedMessage, injectIntl, intlShape } from '../../util/reactIntl';\nimport { isScrollingDisabled } from '../../ducks/UI.duck';\nimport { TopbarContainer } from '../../containers';\nimport {\n  Page,\n  LayoutSideNavigation,\n  LayoutWrapperMain,\n  LayoutWrapperSideNav,\n  LayoutWrapperTopbar,\n  LayoutWrapperFooter,\n  Footer,\n  TermsOfService,\n} from '../../components';\nimport config from '../../config';\n\nimport css from './TermsOfServicePage.module.css';\n\nconst TermsOfServicePageComponent = props => {\n  const { scrollingDisabled, intl } = props;\n\n  const tabs = [\n    {\n      text: intl.formatMessage({ id: 'TermsOfServicePage.privacyTabTitle' }),\n      selected: false,\n      linkProps: {\n        name: 'PrivacyPolicyPage',\n      },\n    },\n    {\n      text: intl.formatMessage({ id: 'TermsOfServicePage.tosTabTitle' }),\n      selected: true,\n      linkProps: {\n        name: 'TermsOfServicePage',\n      },\n    },\n    {\n      text: intl.formatMessage({ id: 'TermsOfServicePage.reimbursmentTabTitle' }),\n      selected: false,\n      linkProps: {\n        name: 'ReimbursmentPage',\n      },\n    },\n  ];\n  const siteTitle = config.siteTitle;\n  const schemaTitle = intl.formatMessage({ id: 'TermsOfServicePage.schemaTitle' }, { siteTitle });\n  const schema = {\n    '@context': 'http://schema.org',\n    '@type': 'WebPage',\n    name: schemaTitle,\n  };\n  return (\n    <Page title={schemaTitle} scrollingDisabled={scrollingDisabled} schema={schema}>\n      <LayoutSideNavigation>\n        <LayoutWrapperTopbar>\n          <TopbarContainer currentPage=\"TermsOfServicePage\" />\n        </LayoutWrapperTopbar>\n        <LayoutWrapperSideNav tabs={tabs} />\n        <LayoutWrapperMain>\n          <div className={css.content}>\n            <h1 className={css.heading}>\n              <FormattedMessage id=\"TermsOfServicePage.heading\" />\n            </h1>\n            <TermsOfService />\n          </div>\n        </LayoutWrapperMain>\n        <LayoutWrapperFooter>\n          <Footer />\n        </LayoutWrapperFooter>\n      </LayoutSideNavigation>\n    </Page>\n  );\n};\n\nconst { bool } = PropTypes;\n\nTermsOfServicePageComponent.propTypes = {\n  scrollingDisabled: bool.isRequired,\n\n  // from injectIntl\n  intl: intlShape.isRequired,\n};\n\nconst mapStateToProps = state => {\n  return {\n    scrollingDisabled: isScrollingDisabled(state),\n  };\n};\n\nconst TermsOfServicePage = compose(\n  connect(mapStateToProps),\n  injectIntl\n)(TermsOfServicePageComponent);\n\nexport default TermsOfServicePage;\n"],"sourceRoot":""}