{"version":3,"sources":["containers/ProfilePage/ProfilePage.module.css","containers/ProfilePage/ProfilePage.js"],"names":["module","exports","ProfilePageComponent","props","state","showReviewsType","REVIEW_TYPE_OF_PROVIDER","showOfProviderReviews","bind","showOfCustomerReviews","this","setState","REVIEW_TYPE_OF_CUSTOMER","content","scrollingDisabled","currentUser","user","userShowError","queryListingsError","listings","reviews","queryReviewsError","viewport","intl","ensuredCurrentUser","ensureCurrentUser","profileUser","ensureUser","isCurrentUser","id","uuid","displayName","attributes","profile","bio","hasBio","hasListings","length","isMobileLayout","width","editLinkMobile","className","css","name","editLinkDesktop","asideContent","avatar","disableProfileLink","mobileHeading","values","listingsContainerClasses","classNames","listingsContainer","withBioMissingAbove","reviewsError","error","reviewsOfProvider","filter","r","type","reviewsOfCustomer","mobileReviews","mobileReviewsTitle","count","desktopReviewTabs","text","desktopReviewsTitle","selected","onClick","desktopReviews","desktopReviewsTabNav","tabs","mainContent","desktopHeading","listingsTitle","map","l","listing","status","schemaTitle","formatMessage","siteTitle","config","title","schema","currentPage","aside","Component","defaultProps","PropTypes","bool","arrayOf","number","shape","ProfilePage","compose","connect","userId","userListingRefs","userMatches","getMarketplaceEntities","isScrollingDisabled","withViewport","injectIntl"],"mappings":"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","file":"static/js/ProfilePage.a97d0673.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"error\":\"ProfilePage_error___ksKd\",\"aside\":\"ProfilePage_aside__7VNIO\",\"asideContent\":\"ProfilePage_asideContent__18s1z\",\"avatar\":\"ProfilePage_avatar__32u4j\",\"mobileHeading\":\"ProfilePage_mobileHeading__3o6Ar\",\"editLinkMobile\":\"ProfilePage_editLinkMobile__2_Q2A\",\"editLinkDesktop\":\"ProfilePage_editLinkDesktop__1ChRA\",\"desktopHeading\":\"ProfilePage_desktopHeading__wa1Mt\",\"bio\":\"ProfilePage_bio__MWnXm\",\"listingsContainer\":\"ProfilePage_listingsContainer__srr9M\",\"listingsTitle\":\"ProfilePage_listingsTitle__1sgW5\",\"withBioMissingAbove\":\"ProfilePage_withBioMissingAbove__21CL7\",\"listings\":\"ProfilePage_listings__1kgS5\",\"listing\":\"ProfilePage_listing__341hA\",\"mobileReviewsTitle\":\"ProfilePage_mobileReviewsTitle__3tVY9\",\"mobileReviews\":\"ProfilePage_mobileReviews__2A2FN\",\"desktopReviews\":\"ProfilePage_desktopReviews__2UWts\",\"desktopReviewsTitle\":\"ProfilePage_desktopReviewsTitle__M6aEc\",\"desktopReviewsTabNav\":\"ProfilePage_desktopReviewsTabNav__21E6w\"};","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { FormattedMessage, injectIntl, intlShape } from '../../util/reactIntl';\nimport { compose } from 'redux';\nimport { connect } from 'react-redux';\nimport classNames from 'classnames';\nimport { REVIEW_TYPE_OF_PROVIDER, REVIEW_TYPE_OF_CUSTOMER, propTypes } from '../../util/types';\nimport { ensureCurrentUser, ensureUser } from '../../util/data';\nimport { withViewport } from '../../util/contextHelpers';\nimport { isScrollingDisabled } from '../../ducks/UI.duck';\nimport { getMarketplaceEntities } from '../../ducks/marketplaceData.duck';\nimport {\n  Page,\n  LayoutSideNavigation,\n  LayoutWrapperMain,\n  LayoutWrapperSideNav,\n  LayoutWrapperTopbar,\n  LayoutWrapperFooter,\n  Footer,\n  AvatarLarge,\n  NamedLink,\n  ListingCard,\n  Reviews,\n  ButtonTabNavHorizontal,\n} from '../../components';\nimport { TopbarContainer, NotFoundPage } from '../../containers';\nimport config from '../../config';\n\nimport css from './ProfilePage.module.css';\n\nconst MAX_MOBILE_SCREEN_WIDTH = 768;\n\nexport class ProfilePageComponent extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      // keep track of which reviews tab to show in desktop viewport\n      showReviewsType: REVIEW_TYPE_OF_PROVIDER,\n    };\n\n    this.showOfProviderReviews = this.showOfProviderReviews.bind(this);\n    this.showOfCustomerReviews = this.showOfCustomerReviews.bind(this);\n  }\n\n  showOfProviderReviews() {\n    this.setState({\n      showReviewsType: REVIEW_TYPE_OF_PROVIDER,\n    });\n  }\n\n  showOfCustomerReviews() {\n    this.setState({\n      showReviewsType: REVIEW_TYPE_OF_CUSTOMER,\n    });\n  }\n\n  render() {\n    const {\n      scrollingDisabled,\n      currentUser,\n      user,\n      userShowError,\n      queryListingsError,\n      listings,\n      reviews,\n      queryReviewsError,\n      viewport,\n      intl,\n    } = this.props;\n    const ensuredCurrentUser = ensureCurrentUser(currentUser);\n    const profileUser = ensureUser(user);\n    const isCurrentUser =\n      ensuredCurrentUser.id && profileUser.id && ensuredCurrentUser.id.uuid === profileUser.id.uuid;\n    const displayName = profileUser.attributes.profile.displayName;\n    const bio = profileUser.attributes.profile.bio;\n    const hasBio = !!bio;\n    const hasListings = listings.length > 0;\n    const isMobileLayout = viewport.width < MAX_MOBILE_SCREEN_WIDTH;\n\n    const editLinkMobile = isCurrentUser ? (\n      <NamedLink className={css.editLinkMobile} name=\"ProfileSettingsPage\">\n        <FormattedMessage id=\"ProfilePage.editProfileLinkMobile\" />\n      </NamedLink>\n    ) : null;\n    const editLinkDesktop = isCurrentUser ? (\n      <NamedLink className={css.editLinkDesktop} name=\"ProfileSettingsPage\">\n        <FormattedMessage id=\"ProfilePage.editProfileLinkDesktop\" />\n      </NamedLink>\n    ) : null;\n\n    const asideContent = (\n      <div className={css.asideContent}>\n        <AvatarLarge className={css.avatar} user={user} disableProfileLink />\n        <h1 className={css.mobileHeading}>\n          {displayName ? (\n            <FormattedMessage id=\"ProfilePage.mobileHeading\" values={{ name: displayName }} />\n          ) : null}\n        </h1>\n        {editLinkMobile}\n        {editLinkDesktop}\n      </div>\n    );\n\n    const listingsContainerClasses = classNames(css.listingsContainer, {\n      [css.withBioMissingAbove]: !hasBio,\n    });\n\n    const reviewsError = (\n      <p className={css.error}>\n        <FormattedMessage id=\"ProfilePage.loadingReviewsFailed\" />\n      </p>\n    );\n\n    const reviewsOfProvider = reviews.filter(r => r.attributes.type === REVIEW_TYPE_OF_PROVIDER);\n\n    const reviewsOfCustomer = reviews.filter(r => r.attributes.type === REVIEW_TYPE_OF_CUSTOMER);\n\n    const mobileReviews = (\n      <div className={css.mobileReviews}>\n        <h2 className={css.mobileReviewsTitle}>\n          <FormattedMessage\n            id=\"ProfilePage.reviewsOfProviderTitle\"\n            values={{ count: reviewsOfProvider.length }}\n          />\n        </h2>\n        {queryReviewsError ? reviewsError : null}\n        <Reviews reviews={reviewsOfProvider} />\n        <h2 className={css.mobileReviewsTitle}>\n          <FormattedMessage\n            id=\"ProfilePage.reviewsOfCustomerTitle\"\n            values={{ count: reviewsOfCustomer.length }}\n          />\n        </h2>\n        {queryReviewsError ? reviewsError : null}\n        <Reviews reviews={reviewsOfCustomer} />\n      </div>\n    );\n\n    const desktopReviewTabs = [\n      {\n        text: (\n          <h3 className={css.desktopReviewsTitle}>\n            <FormattedMessage\n              id=\"ProfilePage.reviewsOfProviderTitle\"\n              values={{ count: reviewsOfProvider.length }}\n            />\n          </h3>\n        ),\n        selected: this.state.showReviewsType === REVIEW_TYPE_OF_PROVIDER,\n        onClick: this.showOfProviderReviews,\n      },\n      {\n        text: (\n          <h3 className={css.desktopReviewsTitle}>\n            <FormattedMessage\n              id=\"ProfilePage.reviewsOfCustomerTitle\"\n              values={{ count: reviewsOfCustomer.length }}\n            />\n          </h3>\n        ),\n        selected: this.state.showReviewsType === REVIEW_TYPE_OF_CUSTOMER,\n        onClick: this.showOfCustomerReviews,\n      },\n    ];\n\n    const desktopReviews = (\n      <div className={css.desktopReviews}>\n        <ButtonTabNavHorizontal className={css.desktopReviewsTabNav} tabs={desktopReviewTabs} />\n\n        {queryReviewsError ? reviewsError : null}\n\n        {this.state.showReviewsType === REVIEW_TYPE_OF_PROVIDER ? (\n          <Reviews reviews={reviewsOfProvider} />\n        ) : (\n          <Reviews reviews={reviewsOfCustomer} />\n        )}\n      </div>\n    );\n\n    const mainContent = (\n      <div>\n        <h1 className={css.desktopHeading}>\n          <FormattedMessage id=\"ProfilePage.desktopHeading\" values={{ name: displayName }} />\n        </h1>\n        {hasBio ? <p className={css.bio}>{bio}</p> : null}\n        {hasListings ? (\n          <div className={listingsContainerClasses}>\n            <h2 className={css.listingsTitle}>\n              <FormattedMessage\n                id=\"ProfilePage.listingsTitle\"\n                values={{ count: listings.length }}\n              />\n            </h2>\n            <ul className={css.listings}>\n              {listings.map(l => (\n                <li className={css.listing} key={l.id.uuid}>\n                  <ListingCard listing={l} />\n                </li>\n              ))}\n            </ul>\n          </div>\n        ) : null}\n        {isMobileLayout ? mobileReviews : desktopReviews}\n      </div>\n    );\n\n    let content;\n\n    if (userShowError && userShowError.status === 404) {\n      return <NotFoundPage />;\n    } else if (userShowError || queryListingsError) {\n      content = (\n        <p className={css.error}>\n          <FormattedMessage id=\"ProfilePage.loadingDataFailed\" />\n        </p>\n      );\n    } else {\n      content = mainContent;\n    }\n\n    const schemaTitle = intl.formatMessage(\n      {\n        id: 'ProfilePage.schemaTitle',\n      },\n      {\n        name: displayName,\n        siteTitle: config.siteTitle,\n      }\n    );\n\n    return (\n      <Page\n        scrollingDisabled={scrollingDisabled}\n        title={schemaTitle}\n        schema={{\n          '@context': 'http://schema.org',\n          '@type': 'ProfilePage',\n          name: schemaTitle,\n        }}\n      >\n        <LayoutSideNavigation>\n          <LayoutWrapperTopbar>\n            <TopbarContainer currentPage=\"ProfilePage\" />\n          </LayoutWrapperTopbar>\n          <LayoutWrapperSideNav className={css.aside}>{asideContent}</LayoutWrapperSideNav>\n          <LayoutWrapperMain>{content}</LayoutWrapperMain>\n          <LayoutWrapperFooter>\n            <Footer />\n          </LayoutWrapperFooter>\n        </LayoutSideNavigation>\n      </Page>\n    );\n  }\n}\n\nProfilePageComponent.defaultProps = {\n  currentUser: null,\n  user: null,\n  userShowError: null,\n  queryListingsError: null,\n  reviews: [],\n  queryReviewsError: null,\n};\n\nconst { bool, arrayOf, number, shape } = PropTypes;\n\nProfilePageComponent.propTypes = {\n  scrollingDisabled: bool.isRequired,\n  currentUser: propTypes.currentUser,\n  user: propTypes.user,\n  userShowError: propTypes.error,\n  queryListingsError: propTypes.error,\n  listings: arrayOf(propTypes.listing).isRequired,\n  reviews: arrayOf(propTypes.review),\n  queryReviewsError: propTypes.error,\n\n  // form withViewport\n  viewport: shape({\n    width: number.isRequired,\n    height: number.isRequired,\n  }).isRequired,\n\n  // from injectIntl\n  intl: intlShape.isRequired,\n};\n\nconst mapStateToProps = state => {\n  const { currentUser } = state.user;\n  const {\n    userId,\n    userShowError,\n    queryListingsError,\n    userListingRefs,\n    reviews,\n    queryReviewsError,\n  } = state.ProfilePage;\n  const userMatches = getMarketplaceEntities(state, [{ type: 'user', id: userId }]);\n  const user = userMatches.length === 1 ? userMatches[0] : null;\n  const listings = getMarketplaceEntities(state, userListingRefs);\n  return {\n    scrollingDisabled: isScrollingDisabled(state),\n    currentUser,\n    user,\n    userShowError,\n    queryListingsError,\n    listings,\n    reviews,\n    queryReviewsError,\n  };\n};\n\nconst ProfilePage = compose(\n  connect(mapStateToProps),\n  withViewport,\n  injectIntl\n)(ProfilePageComponent);\n\nexport default ProfilePage;\n"],"sourceRoot":""}